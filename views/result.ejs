<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Sequence Results - Blue Equinox</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .loading {
            text-align: center;
            padding: 50px;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .result-section {
            margin-bottom: 40px;
        }
        
        .section-title {
            font-size: 1.8em;
            color: #333;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 3px solid #667eea;
        }
        
        .email-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 20px;
            border-left: 5px solid #667eea;
        }
        
        .email-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .email-id {
            background: #667eea;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-weight: bold;
            font-size: 0.9em;
        }
        
        .email-subject {
            font-size: 1.3em;
            font-weight: bold;
            color: #333;
            flex: 1;
            margin-left: 15px;
        }
        
        .email-body {
            color: #555;
            line-height: 1.6;
            white-space: pre-wrap;
        }
        
        .linkedin-section {
            background: #0077b5;
            color: white;
            border-radius: 10px;
            padding: 25px;
            margin-top: 30px;
        }
        
        .linkedin-title {
            font-size: 1.5em;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }
        
        .linkedin-title::before {
            content: "üíº";
            margin-right: 10px;
        }
        
        .linkedin-message {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 8px;
            line-height: 1.6;
            white-space: pre-wrap;
        }
        
        .actions {
            text-align: center;
            margin-top: 30px;
            padding-top: 30px;
            border-top: 2px solid #eee;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            margin: 0 10px;
            text-decoration: none;
            display: inline-block;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-secondary:hover {
            box-shadow: 0 10px 20px rgba(108, 117, 125, 0.3);
        }
        
        .json-display {
            background: #2d3748;
            color: #e2e8f0;
            padding: 20px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
            overflow-x: auto;
            white-space: pre-wrap;
            margin-top: 20px;
        }
        
        .copy-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9em;
            margin-top: 10px;
        }
        
        .copy-btn:hover {
            background: #218838;
        }
        
        .status {
            text-align: center;
            padding: 20px;
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .status.waiting {
            background: #d1ecf1;
            border-color: #bee5eb;
            color: #0c5460;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìß Email Sequence Results</h1>
            <p>Generated by Blue Equinox AI</p>
        </div>
        
        <div class="content">
            <div id="loadingState" class="loading">
                <div class="spinner"></div>
                <h3>Waiting for results from n8n...</h3>
                <p>This may take a few moments. The page will automatically update when results are ready.</p>
            </div>
            
            <div id="resultContent" style="display: none;">
                <div class="status" id="statusMessage">
                    ‚úÖ Results received from n8n workflow
                </div>
                
                <div class="result-section">
                    <h2 class="section-title">üìß Email Sequence (9 Emails)</h2>
                    <div id="emailsContainer">
                        <!-- Emails will be populated here -->
                    </div>
                </div>
                
                <div class="linkedin-section">
                    <h3 class="linkedin-title">LinkedIn Message</h3>
                    <div class="linkedin-message" id="linkedinMessage">
                        <!-- LinkedIn message will be populated here -->
                    </div>
                </div>
                
                <div class="result-section">
                    <h2 class="section-title">üîß Raw JSON Data</h2>
                    <button class="copy-btn" onclick="copyToClipboard()">üìã Copy JSON</button>
                    <div class="json-display" id="jsonDisplay">
                        <!-- Raw JSON will be displayed here -->
                    </div>
                </div>
                
                <div class="actions">
                    <a href="/form" class="btn">üîÑ Generate New Sequence</a>
                    <button class="btn btn-secondary" onclick="window.print()">üñ®Ô∏è Print Results</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let pollInterval;
        
        // Start polling for results
        function startPolling() {
            pollInterval = setInterval(async () => {
                try {
                    const response = await fetch('/latest-result');
                    const result = await response.json();
                    
                    if (result && result.emails) {
                        clearInterval(pollInterval);
                        displayResults(result);
                    }
                } catch (error) {
                    console.error('Error polling for results:', error);
                }
            }, 2000); // Check every 2 seconds
        }
        
        function displayResults(data) {
            const loadingState = document.getElementById('loadingState');
            const resultContent = document.getElementById('resultContent');
            const emailsContainer = document.getElementById('emailsContainer');
            const linkedinMessage = document.getElementById('linkedinMessage');
            const jsonDisplay = document.getElementById('jsonDisplay');
            
            // Hide loading, show results
            loadingState.style.display = 'none';
            resultContent.style.display = 'block';
            
            // Display emails
            emailsContainer.innerHTML = '';
            data.emails.forEach(email => {
                const emailCard = document.createElement('div');
                emailCard.className = 'email-card';
                emailCard.innerHTML = `
                    <div class="email-header">
                        <span class="email-id">Email ${email.id}</span>
                        <div class="email-subject">${email.subject || 'No Subject'}</div>
                    </div>
                    <div class="email-body">${email.body || 'No content'}</div>
                `;
                emailsContainer.appendChild(emailCard);
            });
            
            // Display LinkedIn message
            if (data.linkedin_message && data.linkedin_message.body) {
                linkedinMessage.textContent = data.linkedin_message.body;
            } else {
                linkedinMessage.textContent = 'No LinkedIn message generated';
            }
            
            // Display raw JSON
            jsonDisplay.textContent = JSON.stringify(data, null, 2);
        }
        
        function copyToClipboard() {
            const jsonText = document.getElementById('jsonDisplay').textContent;
            navigator.clipboard.writeText(jsonText).then(() => {
                const btn = document.querySelector('.copy-btn');
                const originalText = btn.textContent;
                btn.textContent = '‚úÖ Copied!';
                setTimeout(() => {
                    btn.textContent = originalText;
                }, 2000);
            });
        }
        
        // Start polling when page loads
        document.addEventListener('DOMContentLoaded', () => {
            startPolling();
            
            // Stop polling after 10 minutes
            setTimeout(() => {
                if (pollInterval) {
                    clearInterval(pollInterval);
                    const loadingState = document.getElementById('loadingState');
                    loadingState.innerHTML = `
                        <h3>‚è∞ Timeout</h3>
                        <p>No results received within 10 minutes. Please try again.</p>
                        <a href="/form" class="btn" style="margin-top: 20px;">üîÑ Try Again</a>
                    `;
                }
            }, 600000);
        });
    </script>
</body>
</html>
